name: Build JavaScriptCore

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    strategy:
      matrix:
        target: [linux, windows, android]
        arch: [x64]
        config: [Release]
        include:
          - target: android
            arch: arm64-v8a
            config: Release
    runs-on: ${{ matrix.target == 'windows' && 'windows-latest' || 'ubuntu-22.04' }}

    steps:
      - name: Checkout WebKit
        uses: actions/checkout@v4
        with:
          repository: WebKit/WebKit
          path: webkit
          fetch-depth: 1

      # ---------------------------
      # Linux 依赖
      # ---------------------------
      - name: Install deps (Linux)
        if: matrix.target == 'linux' || matrix.target == 'android'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential cmake ninja-build \
            gperf bison flex ruby perl python3 \
            pkg-config libicu-dev libxml2-dev libxslt1-dev \
            libsqlite3-dev libjpeg-dev libpng-dev libwebp-dev \
            libharfbuzz-dev ccache

      - name: Setup MSVC (Windows)
        if: matrix.target == 'windows'
        shell: pwsh
        uses: ilammy/msvc-dev-cmd@v1

      - name: Setup Android NDK
        if: matrix.target == 'android'
        uses: nttld/setup-ndk@v1
        with:
          ndk-version: r26d
          add-to-path: true
          link-to-sdk: true
          local-cache: true

      # ================= Build ICU for Android =================
      - name: Build ICU4C (Android)
        if: matrix.target == 'android'
        uses: unicode-org/icu/.github/actions/icu4c@main
        with:
          platform: android
          arch: ${{ matrix.arch }}
          build-dir: ${{ github.workspace }}/icu4c-build
          install-dir: ${{ github.workspace }}/icu4c-install

      # ================= Build JSC =================
      - name: Build JSC (Linux)
        if: matrix.target == 'linux'
        run: |
          Tools/Scripts/build-jsc --jsc-only --${{ matrix.config,, }}

      - name: Build JSC (Windows)
        if: matrix.target == 'windows'
        shell: pwsh
        run: |
          perl Tools/Scripts/build-jsc --jsc-only --${{ matrix.config,, }} \
            --cmakeargs="-GNinja"

      - name: Build JSC (Android)
        if: matrix.target == 'android'
        run: |
          Tools/Scripts/build-jsc --jsc-only --${{ matrix.config,, }} \
            --cmakeargs="-GNinja \
              -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK_HOME/build/cmake/android.toolchain.cmake \
              -DANDROID_ABI=${{ matrix.arch }} \
              -DANDROID_PLATFORM=android-24 \
              -DCMAKE_PREFIX_PATH=$GITHUB_WORKSPACE/icu4c-install \
              -DCMAKE_POLICY_DEFAULT_CMP0048=NEW"

      # ================= Upload Artifacts =================
      - name: Upload Android artifacts
        uses: actions/upload-artifact@v4
        with:
          name: jsc-${{ matrix.target }}${{ matrix.abi && format('-{0}', matrix.abi) || '' }}-${{ matrix.config }}
          path: |
            WebKitBuild/${{ matrix.config }}/lib/**
